// app/layout.js
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

// Import the server-side Supabase client helper
import { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs';
// Import your client-side Supabase Provider
import SupabaseProvider from '../utils/SupabaseProvider'; // Adjust path if needed

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

// Mark as async to use await for fetching session
export default async function RootLayout({ children }) {
    // Create a Supabase client on the server to get the session
    const supabase = createServerSupabaseClient({
        supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL,
        supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,
    });

    // Get the session from the server context
    const { data: { session } } = await supabase.auth.getSession();

    return (
        <html lang="en">
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* Wrap children with the SupabaseProvider client component */}
        <SupabaseProvider initialSession={session}>
            {children}
        </SupabaseProvider>
        </body>
        </html>
    );
}